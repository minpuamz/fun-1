/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    int ans; 
    public int longestUnivaluePath(TreeNode root) {
        ans = 0;
        internal(root);
        return ans;
    }
    private int internal(TreeNode node) {
        if (node == null) return 0;
        int left = internal(node.left);
        int right = internal(node.right);
        int arrowLeft = 0, arrowRight = 0;
        if (node.left != null && node.left.val == node.val) {
            arrowLeft = left +1;
        }

        if (node.right != null && node.right.val == node.val) {
            arrowRight = right +1;
        }
        ans = Math.max(ans, arrowLeft + arrowRight);
        return Math.max(arrowLeft, arrowRight);
    }
}
