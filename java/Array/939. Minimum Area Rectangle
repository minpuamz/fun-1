ime Complexity: O(N^2)O(N 
2
 ), where NN is the length of points.

Space Complexity: O(N)O(N).


class Solution {
    public int minAreaRect(int[][] points) {
        Set<Integer> pointSet = new HashSet();
        for (int[] pp : points) {
            pointSet.add(40001 * pp[0] + pp[1]);
        }
        
        int ans = Integer.MAX_VALUE;
        for (int i = 0; i < points.length; i++) {
            for (int j = i + 1; j < points.length; j++) {
                // not shareing any line 
                if (points[i][0] != points[j][0] && points[i][1] != points[j][1]) {
                    // find other two nodes if possible 
                    if (pointSet.contains(points[i][0] * 40001 + points[j][1]) && pointSet.contains(points[j][0] * 40001 + points[i][1])) {
                        ans = Math.min(ans, Math.abs(points[i][0] - points[j][0]) * 
                                      Math.abs(points[i][1] - points[j][1]));
                    }
                    
                }
            }    
        }
        return ans < Integer.MAX_VALUE ? ans : 0;
    }
}
