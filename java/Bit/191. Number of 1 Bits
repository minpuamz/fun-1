// unsigned >>1 不对 11111111111111111111111111111101 is -3
public class Solution {
    // you need to treat n as an unsigned value
    public int hammingWeight(int n) {
     int bits = 0;
     int mask = 1;
     for (int i = 0; i < 32; i++) {
        if ((n & mask) != 0) {
            bits++;
        }
        mask = mask << 1;
    }
    return bits;
}
}

//the two numbers n and n - 1 always flips the least significant 1-bit in n to 00,
// instead of n = n >> 1
public int hammingWeight(int n) {
    int sum = 0;
    while (n != 0) {
        sum++;
        n &= (n - 1);
    }
    return sum;
}
